apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mysql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: mysql
    app: {{ .Release.Name }}-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: mysql
      app: {{ .Release.Name }}-mysql
  serviceName: "{{ .Release.Name }}-mysql"
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: mysql
        app: {{ .Release.Name }}-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          args:
            - "--default-authentication-plugin=mysql_native_password"
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu}}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mysql-root-secret
                  key: root-password
            - name: MYSQL_DEFAULT_AUTH
              value: mysql_native_password
          ports:
            - containerPort: 3306
          livenessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - "mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                - "mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD"
            initialDelaySeconds: 5
            periodSeconds: 10

          volumeMounts:
            - name: {{.Release.Name }}-mysql-persistent-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: {{.Release.Name }}-mysql-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.diskSize }}
