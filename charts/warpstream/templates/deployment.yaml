apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "warpstream.fullname" . }}
  labels:
    {{- include "warpstream.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "warpstream.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "warpstream.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "warpstream.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range . }}
        - {{- toYaml . | nindent 10 }}
          labelSelector:
            matchLabels:
              {{- include "warpstream.selectorLabels" $ | nindent 14 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- include "warpstream.args" . | nindent 12 }}
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: schema-registry
              containerPort: 9094
              protocol: TCP
          env:
            - name: WARPSTREAM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "warpstream.fullname" . }}-secret
                  key: api-key
            - name: WARPSTREAM_LOG_LEVEL
              value: {{ .Values.warpstream.agent.logLevel | quote }}
            {{- if .Values.warpstream.agent.availabilityZone }}
            - name: WARPSTREAM_AVAILABILITY_ZONE
              value: {{ .Values.warpstream.agent.availabilityZone | quote }}
            {{- end }}
            {{- if .Values.warpstream.performance.gomaxprocs }}
            - name: GOMAXPROCS
              value: {{ .Values.warpstream.performance.gomaxprocs | quote }}
            {{- end }}
            {{- range .Values.warpstream.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /tmp/warpstream
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "warpstream.fullname" . }}-pvc
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      