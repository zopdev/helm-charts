apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Release.Name }}-surrealdb
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/part-of: surrealdb
    app: {{ $.Release.Name }}-surrealdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: surrealdb
      app: {{ $.Release.Name }}-surrealdb
  serviceName: {{ $.Release.Name }}-surrealdb
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: surrealdb
        app: {{ $.Release.Name }}-surrealdb
    spec:
      containers:
        - name: surrealdb
          image: "surrealdb/surrealdb:{{ .Values.version }}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          args: [start]
          env:
            - name: SURREAL_BIND
              value: 0.0.0.0:8000
            - name: SURREALDB_DB_PATH
              value: "/var/lib/surrealdb/data/"
            - name: SURREAL_PATH
              value: memory
            - name: SURREAL_UNAUTHENTICATED
              value: "true"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: {{ $.Release.Name }}-persistent-storage
              mountPath: /var/lib/surrealdb/data
              subPath: data
  volumeClaimTemplates:
    - metadata:
        name: {{ $.Release.Name }}-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.diskSize }}