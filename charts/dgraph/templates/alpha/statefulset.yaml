{{- /* Generate comma-separated list of Zeros */}}
{{- define "multi_zeros" -}}
  {{- $zeroFullName := include "dgraph.zero.fullname" . -}}
  {{- $max := 1 -}}
  {{- $safeVersion := include "dgraph.version" . -}}
  {{- /* Reset $max to 1 if multiple zeros not supported by dgraph version */}}
  {{- if semverCompare "< 1.2.3 || 20.03.0" $safeVersion -}}
     {{- $max = 1 -}}
  {{- end -}}

  {{- $domainSuffix := ".cluster.local" -}}

  {{- /* Create comma-separated list of zeros */}}
  {{- range $idx := until $max }}
    {{- printf "%s-%d.%s-headless.${POD_NAMESPACE}.svc%s:5080" $zeroFullName $idx $zeroFullName $domainSuffix -}}
    {{- if ne $idx (sub $max 1) -}}
      {{- print "," -}}
    {{- end -}}
  {{ end }}
{{- end -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "dgraph.alpha.fullname" . }}
  namespace: {{ include "dgraph.namespace" . }}
  labels:
    app: {{ template "dgraph.name" . }}
    chart: {{ template "dgraph.chart" . }}
    component: "alpha"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "dgraph.alpha.fullname" . }}-headless
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "dgraph.name" . }}
      chart: {{ template "dgraph.chart" . }}
      release: {{ .Release.Name }}
      component: "alpha"
  template:
    metadata:
      name: {{ template "dgraph.alpha.fullname" . }}
      annotations:
        prometheus.io/path: /debug/prometheus_metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: {{ template "dgraph.name" . }}
        chart: {{ template "dgraph.chart" . }}
        release: {{ .Release.Name }}
        component: "alpha"
    spec:
      serviceAccountName: dgraph
      automountServiceAccountToken: true
      {{- if .Values.alpha.schedulerName }}
      schedulerName: {{ .Values.alpha.schedulerName }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - alpha
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ template "dgraph.alpha.fullname" . }}
        image: {{ template "dgraph.image" . }}
        ports:
        - containerPort: 7080
          name: grpc-alpha-int
        - containerPort: 8080
          name: http-alpha
        - containerPort: 9080
          name: grpc-alpha
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{/* NOTE: awk '{gsub(/\.$/,"") needed to trim */}}
        command:
          - bash
          - "-c"
          ## NOTE: awk gsub is needed to trim trailing period otherwise it causes
          ##       crash for Kubernetes without the domain name
          {{- /* TODO: Remove awk-gsub once dgraph-io/dgraph#6837 is merged and back-ported. */}}
          - |
            set -ex
            dgraph alpha --my=$(hostname -f | awk '{gsub(/\.$/,""); print $0}'):7080 --zero {{ template "multi_zeros" . }} 
        resources:
{{ toYaml .Values.alpha.resources | indent 10 }}
        livenessProbe:
          httpGet:
            port: 8080
            path: /health?live=1
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            port: 8080
            path: /probe/graphql
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: datadir
          mountPath: /dgraph
      terminationGracePeriodSeconds: 600
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.alpha.diskSize }}
        storageClassName: ""