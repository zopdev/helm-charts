{{- range $index, $service := .Values.services }}
{{- $maxLen := 27 }}
{{- $randomSuffix := randAlphaNum 4 | lower }}
{{- $trimmedName := trunc $maxLen $service.name }}
{{- $generatedUsername := printf "%s-%s" $trimmedName $randomSuffix }}
{{- $generatedPassword := printf "%s%s%s" (randAlpha 4) (randNumeric 4) (randAlpha 4 | upper) }}

{{/* Define Secret Name */}}
{{- $secretName := printf "%s-%s-%s-scylladb-database-secret" $.Release.Name (replace "_" "-" $service.database) $service.name }}

{{/* Retrieve existing secret (if any) */}}
{{- $existingSecret := lookup "v1" "Secret" $.Release.Namespace $secretName }}

{{/* Use existing values if available, otherwise generate new ones */}}
{{- $username := $generatedUsername }}
{{- $password := $generatedPassword }}

{{- if $existingSecret }}
  {{- with $existingSecret.data }}
    {{- if hasKey . "DB_USER" }}
      {{- $username = index . "DB_USER" | b64dec }}
    {{- end }}
    {{- if hasKey . "DB_PASSWORD" }}
      {{- $password = index . "DB_PASSWORD" | b64dec }}
    {{- end }}
  {{- end }}
{{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-{{ replace "_" "-" $service.database }}-{{ $service.name }}-scylladb-configmap
  namespace: {{ $.Release.Namespace }}
data:
  SCYLLADB_HOST: {{ $.Release.Name }}-scylladb
  SCYLLADB_KEYSPACE: "{{ $service.database }}" 
  SCYLLADB_PORT: "9042"
  SCYLLADB_USERNAME: "{{ $username }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ $.Release.Namespace }}
type: Opaque
data:
  SCYLLADB_PASSWORD: {{ $password | b64enc }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Release.Name }}-{{ $service.name }}-init-script
  namespace: {{ $.Release.Namespace }}
data:
  init-schema.cql: |
    CREATE KEYSPACE IF NOT EXISTS "{{ $service.database }}"
    WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 3};

    USE "{{ $service.database }}";
    CREATE ROLE IF NOT EXISTS "{{ $service.name }}-user" WITH PASSWORD = '{{ $service.password }}' AND LOGIN = true;
    GRANT ALL PERMISSIONS ON KEYSPACE "{{ $service.database }}" TO "{{ $service.name }}-user";
{{- end }}