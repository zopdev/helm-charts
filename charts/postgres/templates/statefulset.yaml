apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/part-of: postgres
    app: {{ $.Release.Name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: postgres
      app: {{ $.Release.Name }}-postgres
  serviceName: {{ $.Release.Name }}-postgres
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: postgres
        app: {{ $.Release.Name }}-postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image}}"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu}}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $.Release.Name }}-postgres-root-secret
                key: postgres-password
          - name: PGDATA
            value: "/var/lib/postgresql/data/db/"
          livenessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - "postgres"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - "postgres"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: {{ $.Release.Name }}-persistent-storage
              mountPath: /var/lib/postgresql/data
              subPath: data
        - name: postgres-exporter
          image: "quay.io/prometheuscommunity/postgres-exporter:v0.12.0"
          args:
            - "--web.listen-address=:2121"
          env:
            - name: DATA_SOURCE_USER
              value: "postgres"
            - name: DATA_SOURCE_URI
              value: "localhost:5432/postgres?sslmode=disable"
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ $.Release.Name }}-postgres-root-secret
                  key: postgres-password
          ports:
            - containerPort: 2121
              name: metrics
          resources:
            requests:
              memory: "128Mi"
              cpu: "256m"
            limits:
              memory: "256Mi"
              cpu: "500m"
  volumeClaimTemplates:
  - metadata:
      name: {{ $.Release.Name }}-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.diskSize }}