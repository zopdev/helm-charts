resources:
  requests:
    cpu: 250m
    memory: 250Mi 
  limits:
    cpu: 500m
    memory: 500Mi

# SuperSet Configs
supersetNode:
  connections:
    # Redis Configs
    redis_host: "{{ .Release.Name }}-redis-headless-service"
    redis_port: "6379"
    redis_user: ""
    redis_cache_db: "1"
    redis_celery_db: "0"
    redis_ssl:
      enabled: false
      ssl_cert_reqs: CERT_NONE

    # Postgresql Configs 
    db_host: "{{ .Release.Name }}-postgres"
    db_port: "5432"
    db_user: superset_user
    db_pass: superset
    db_name: superset

service:
  name : "superset-node-service"
  image: "apachesuperset.docker.scarf.sh/apache/superset:4.1.1"
  minReplicas : 1
    
  httpPort: 8088
  metricsPort :

  hpa_enable : true
  hpaCPU : "80"
  hpaMemory : "80"

  initContainer:
    image: "apache/superset:dockerize"
    envFrom:
       secrets:
          - '{{ template "superset.fullname" . }}-env'
    command:
      - /bin/sh
      - -c
      - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s 

  command:
    - "/bin/sh"
    - "-c"
    - ". /app/pythonpath/superset_bootstrap.sh; /usr/bin/run-server.sh"

  env :
    SUPERSET_PORT : 8088

  envFrom:
    secrets: 
      - '{{ template "superset.fullname" . }}-env'

  volumeMounts:
    secrets:
      - name: superset-config
        secretName : '{{ template "superset.fullname" . }}-config'
        mountPath: "/app/pythonpath"
        readOnly: true
  
  heartbeatURL : /health
  
  livenessProbe:
    enable : true
    initialDelaySeconds: 15
    timeoutSeconds: 1
    failureThreshold: 60
    periodSeconds: 5
    successThreshold: 1

  readinessProbe:
    enable : true
    initialDelaySeconds: 15
    timeoutSeconds: 1
    failureThreshold: 3
    periodSeconds: 15
    successThreshold: 1
  
  minCPU: "250m"
  minMemory: "250Mi"
  maxCPU: "500m"
  maxMemory: "500Mi"

  nginx:
    host : 
    tlshost : 
    tlsSecretname :
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/auth-realm: ''
      nginx.ingress.kubernetes.io/auth-secret: ''
      nginx.ingress.kubernetes.io/auth-type: ''

supersetCeleryBeat:
  enabled: false

supersetCeleryFlower:
  enabled: false

postgres:
  enabled: true
  postgresRootPassword: "superset"
  services:
    - name : superset
      password : superset
      database : superset

redis:
  enabled: true


  