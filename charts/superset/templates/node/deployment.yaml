apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "superset.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "superset.name" . }}
    chart: {{ template "superset.chart" . }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- include "supersetNode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/superset_config.py: {{ include "superset-config" . | sha256sum }}
        checksum/superset_init.sh: {{ tpl .Values.init.initscript . | sha256sum }}
        checksum/connections: {{ .Values.supersetNode.connections | toYaml | sha256sum }}
        checksum/configOverrides: {{ .Values.configOverrides | toYaml | sha256sum }}
      labels:
        app: {{ template "superset.name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
        - name: wait-for-postgres
          image: apache/superset:dockerize
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: '{{ template "superset.fullname" . }}-env'
          command:
            - /bin/sh
            - -c
            - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s
      containers:
        - name: {{ .Chart.Name }}
          image: "apachesuperset.docker.scarf.sh/apache/superset:4.1.1"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-c"
            - ". /app/pythonpath/superset_bootstrap.sh; /usr/bin/run-server.sh"
          env:
            - name: "SUPERSET_PORT"
              value: "8088"
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key | quote}}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ template "superset.fullname" . }}-env
          volumeMounts:
            - name: superset-config
              mountPath: "/app/pythonpath"
              readOnly: true
          ports:
            - name: http
              containerPort: 8088
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1

          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
            periodSeconds: 15
            successThreshold: 1
          resources:
            requests:
              cpu: 250m
              memory: 250Mi
            limits:
              cpu: 500m
              memory: 500Mi
      volumes:
        - name: superset-config
          secret:
            secretName: {{ template "superset.fullname" . }}-config
