apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: redis
    app: "{{ .Release.Name }}-redis"
spec:
  replicas: 1
  serviceName: "{{ .Release.Name }}-redis-headless-service"
  selector:
    matchLabels:
      app.kubernetes.io/part-of: redis
      app: "{{ .Release.Name }}-redis"
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: redis
        app: "{{ .Release.Name }}-redis"
    spec:
      containers:
        - name: redis
          image: {{ .Values.image }}
          command:
          - /bin/bash
          - -c
          - |
            if [[ ! -f /etc/redis/master.conf ]];then
              cp /etc/redis/mounted-etc/master.conf /etc/redis/master.conf
            fi
            ARGS=("--port" "${REDIS_PORT}")
            ARGS+=("--protected-mode" "no")
            ARGS+=("--include" "/etc/redis/master.conf")
            redis-server "${ARGS[@]}"
          resources:
            requests:
              memory: {{ .Values.master.resources.requests.memory }}
              cpu: {{ .Values.master.resources.requests.cpu }}
            limits:
              memory: {{ .Values.master.resources.limits.memory }}
              cpu: {{ .Values.master.resources.limits.cpu }}
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: {{ .Release.Name }}-redis-persistent-storage
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/mounted-etc
      volumes:
        - name: redis-config
          configMap:
            name: "{{ .Release.Name }}-redis-configmap"
  volumeClaimTemplates:
    - metadata:
        name: {{ .Release.Name }}-redis-persistent-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.master.persistence.size }}