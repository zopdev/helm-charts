kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "cockroachdb.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    helm.sh/chart: {{ template "cockroachdb.chart" . }}
    app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/component: cockroachdb
spec:
  serviceName: {{ template "cockroachdb.fullname" . }}
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/component: cockroachdb

  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/component: cockroachdb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
                    app.kubernetes.io/instance: {{ .Release.Name | quote }}
                    app.kubernetes.io/component: cockroachdb
      # No pre-stop hook is required, a SIGTERM plus some time is all that's
      # needed for graceful shutdown of a node.
      terminationGracePeriodSeconds: 60
      containers:
        - name: cockroachdb
          image: "cockroachdb/cockroach:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - shell
            - '-ecx'
            - >-
              exec /cockroach/cockroach start
              --join=${STATEFULSET_NAME}-0.${STATEFULSET_FQDN}:26257,${STATEFULSET_NAME}-1.${STATEFULSET_FQDN}:26257,${STATEFULSET_NAME}-2.${STATEFULSET_FQDN}:26257
              --advertise-host=$(hostname).${STATEFULSET_FQDN}
              --logtostderr=INFO --insecure --http-port=8080 --port=26257
              --cache=25% --max-disk-temp-storage=0 --max-offset=500ms
              --max-sql-memory=25%
          env:
            - name: STATEFULSET_NAME
              value: {{ template "cockroachdb.fullname" . }}
            - name: STATEFULSET_FQDN
              value: {{ template "cockroachdb.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
            - name: COCKROACH_CHANNEL
              value: kubernetes-helm
          ports:
            - name: grpc
              containerPort: 26257
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: datadir
              mountPath: /cockroach/cockroach-data/
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health?ready=1
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 2
      volumes:
        - name: datadir
          persistentVolumeClaim:
            claimName: datadir
          hostPath:
            path: ""
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app.kubernetes.io/name: {{ template "cockroachdb.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name | quote }}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.diskSize | quote }}